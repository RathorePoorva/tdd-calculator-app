{"ast":null,"code":"import _classCallCheck from \"/Users/poorvarathore/Documents/Poorva's Workspace/tdd-calculator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Users/poorvarathore/Documents/Poorva's Workspace/tdd-calculator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/poorvarathore/Documents/Poorva's Workspace/tdd-calculator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/poorvarathore/Documents/Poorva's Workspace/tdd-calculator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/poorvarathore/Documents/Poorva's Workspace/tdd-calculator-app/src/component/Calculator.jsx\";\nimport React from \"react\";\nimport \"./css/calculator.css\";\nimport Display from \"./Display\";\nimport Keypad from \"./Keypad\";\n\nvar Calculator = /*#__PURE__*/function (_React$Component) {\n  _inherits(Calculator, _React$Component);\n\n  var _super = _createSuper(Calculator);\n\n  function Calculator() {\n    var _this;\n\n    _classCallCheck(this, Calculator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      //value to be displayed in <Display />\n      displayValue: \"0\",\n      //keys numbers list for <Key />\n      numbers: [\"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"1\", \".\", \"0\", \"ce\"],\n      //operator key list for <Key />\n      operators: [\"+\", \"-\", \"*\", \"/\"],\n      //operator selected for operation\n      selectedOperator: \"\",\n      //value stored for the operation\n      storedValue: \"\"\n    };\n\n    _this.updateDisplay = function (value) {\n      var displayValue = _this.state.displayValue; //prevent multiple occurence of  \".\" operator\n\n      if (value === \".\" && displayValue.includes(\".\")) {\n        value = \"\";\n      }\n\n      if (value === \"ce\") {\n        //delete last char of displayValue\n        displayValue = displayValue.substr(0, displayValue.length - 1);\n        if (displayValue === \"\") displayValue = \"0\";\n      }\n    };\n\n    _this.callOperator = function () {\n      console.log(\"call operator\");\n    };\n\n    _this.setOperator = function () {\n      console.log(\"set operator\");\n    };\n\n    _this.render = function () {\n      var _this$state = _this.state,\n          displayValue = _this$state.displayValue,\n          numbers = _this$state.numbers,\n          operators = _this$state.operators;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"calculator-container\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Display, {\n        displayValue: displayValue,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Keypad, {\n        callOperator: _this.callOperator,\n        numbers: numbers,\n        operators: operators,\n        setOperator: _this.setOperator,\n        updateDisplay: _this.updateDisplay,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    return _this;\n  }\n\n  return Calculator;\n}(React.Component);\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/poorvarathore/Documents/Poorva's Workspace/tdd-calculator-app/src/component/Calculator.jsx"],"names":["React","Display","Keypad","Calculator","state","displayValue","numbers","operators","selectedOperator","storedValue","updateDisplay","value","includes","substr","length","callOperator","console","log","setOperator","render","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAEMC,U;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACN;AACAC,MAAAA,YAAY,EAAE,GAFR;AAGN;AACAC,MAAAA,OAAO,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,IAAxD,CAJH;AAKN;AACAC,MAAAA,SAAS,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CANL;AAON;AACAC,MAAAA,gBAAgB,EAAE,EARZ;AASN;AACAC,MAAAA,WAAW,EAAE;AAVP,K;;UAaRC,a,GAAgB,UAACC,KAAD,EAAW;AAAA,UACnBN,YADmB,GACF,MAAKD,KADH,CACnBC,YADmB,EAGzB;;AACA,UAAIM,KAAK,KAAK,GAAV,IAAiBN,YAAY,CAACO,QAAb,CAAsB,GAAtB,CAArB,EAAiD;AAC/CD,QAAAA,KAAK,GAAG,EAAR;AACD;;AACD,UAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB;AACAN,QAAAA,YAAY,GAAGA,YAAY,CAACQ,MAAb,CAAoB,CAApB,EAAuBR,YAAY,CAACS,MAAb,GAAsB,CAA7C,CAAf;AACA,YAAIT,YAAY,KAAK,EAArB,EAAyBA,YAAY,GAAG,GAAf;AAC1B;AACF,K;;UAEDU,Y,GAAe,YAAM;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,K;;UAEDC,W,GAAc,YAAM;AAClBF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,K;;UACDE,M,GAAS,YAAM;AAAA,wBACgC,MAAKf,KADrC;AAAA,UACLC,YADK,eACLA,YADK;AAAA,UACSC,OADT,eACSA,OADT;AAAA,UACkBC,SADlB,eACkBA,SADlB;AAEb,0BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AAAS,QAAA,YAAY,EAAEF,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,MAAD;AACE,QAAA,YAAY,EAAE,MAAKU,YADrB;AAEE,QAAA,OAAO,EAAET,OAFX;AAGE,QAAA,SAAS,EAAEC,SAHb;AAIE,QAAA,WAAW,EAAE,MAAKW,WAJpB;AAKE,QAAA,aAAa,EAAE,MAAKR,aALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAYD,K;;;;;;EAjDsBV,KAAK,CAACoB,S;;AAmD/B,eAAejB,UAAf","sourcesContent":["import React from \"react\";\nimport \"./css/calculator.css\";\nimport Display from \"./Display\";\nimport Keypad from \"./Keypad\";\n\nclass Calculator extends React.Component {\n  state = {\n    //value to be displayed in <Display />\n    displayValue: \"0\",\n    //keys numbers list for <Key />\n    numbers: [\"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"1\", \".\", \"0\", \"ce\"],\n    //operator key list for <Key />\n    operators: [\"+\", \"-\", \"*\", \"/\"],\n    //operator selected for operation\n    selectedOperator: \"\",\n    //value stored for the operation\n    storedValue: \"\",\n  };\n  //to update the display of the screen\n  updateDisplay = (value) => {\n    let { displayValue } = this.state;\n\n    //prevent multiple occurence of  \".\" operator\n    if (value === \".\" && displayValue.includes(\".\")) {\n      value = \"\";\n    }\n    if (value === \"ce\") {\n      //delete last char of displayValue\n      displayValue = displayValue.substr(0, displayValue.length - 1);\n      if (displayValue === \"\") displayValue = \"0\";\n    }\n  };\n  //to call the operator for operation\n  callOperator = () => {\n    console.log(\"call operator\");\n  };\n  //to set the operator for operation\n  setOperator = () => {\n    console.log(\"set operator\");\n  };\n  render = () => {\n    const { displayValue, numbers, operators } = this.state;\n    return (\n      <div className=\"calculator-container\">\n        <Display displayValue={displayValue} />\n        <Keypad\n          callOperator={this.callOperator}\n          numbers={numbers}\n          operators={operators}\n          setOperator={this.setOperator}\n          updateDisplay={this.updateDisplay}\n        />\n      </div>\n    );\n  };\n}\nexport default Calculator;\n"]},"metadata":{},"sourceType":"module"}